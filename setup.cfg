[metadata]
name = gamgin
version = 0.0.4
author = fanmh
author_email = fang9guang@gmail.com
description = "This is a LLM based voice assistant named GamGin."
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
license_files = LICENSE
classifiers =
    License :: OSI Approved :: MIT License

[options]
python_requires = >=3.10

package_dir = 
    =src
# # if using regular package:
packages = find:
# # if using namespace package:
# packages = find_namespace:

# include non-Python/supporting files:
include_package_data = True

# third-party dependencies:
install_requires =
    termcolor>=1.1.0,<2
    # mkdocs>=1.4.3,<2
    # gradio>=3.36.1,<4
    # torch>=2.1.2,<3
    # torchaudio>=2.1.2,<3
    # transformers>=4.30.2,<5
    # openai-whisper


# in case any test modules live outside the test/ directory
[options.packages.find]
where = src
exclude = 
    test*

[options.entry_points]
console_scripts =
    harmony2 = cythonpkg.harmony:main

# ----------- #
# Tool config #
# ----------- #
[flake8]
# Black: add whitespace before ":" in complex slice
extend-ignore = E203
exclude =
    # No need to traverse our git directory
    .git,
    # There's no value in checking cache directories
    __pycache__,
    # The conf file is mostly autogenerated, ignore it
    docs/source/conf.py,
    # The old directory contains Flake8 2.0
    old,
    # This contains our built documentation
    build,
    # This contains builds of flake8 that we don't want to check
    dist
max-complexity = 10
max-line-length = 79

[mypy]
python_version = 3.10
warn_unused_configs = True
show_error_context = True
pretty = True
namespace_packages = True
check_untyped_defs = True

[tool:pytest]
testpaths = test
addopts = 
    --cov
    --strict-markers
xfail_strict = True

[coverage:run]
branch = True
source =
    cythonpkg

[coverage:report]
show_missing = True
skip_covered = True

[coverage:paths]
source =
    src/cythonpkg/
    */site-packages/cythonpkg

[tox:tox]
envlist = py311,py310
isolated_build = True

[testimports]
deps = 
    pytest

[testenv]
deps =
    {[testimports]deps}
    pytest-cov
    pytest-randomly

commands = 
    pytest {posargs}

[testenv:get_my_ip]  # demo
skip_install = True
deps =
    requests
commands = 
    python3 -c 'import requests;print(requests.get("https://canhazip.com").text)'
    
[testenv:check-imports]
deps =
    {[testimports]deps}
    shipyard

commands = 
    python3 -m shipyard versify
    
[testenv:typecheck]
deps =
    {[testimports]deps}
    mypy
    types-termcolor

commands = 
    mypy --ignore-missing-imports {posargs:src test}

[testenv:format]
skip_install = True
deps = 
    black

commands =
    black --check --diff {posargs:src test}

[testenv:lint]
deps =
    flake8
    flake8-bugbear

commands =
    flake8 {posargs:src test}
